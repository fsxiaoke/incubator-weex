apply plugin: 'com.android.library'
//apply from: '../upload.gradle'


buildscript {
    apply plugin: 'maven'
    dependencies {
//        classpath 'com.android.tools.build:gradle:2.3.3'
//        classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.5.0'
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: gradle.mavenUrl) {
                    authentication(userName: gradle.mavenUserName, password: gradle.mavenPwd)
                }

                snapshotRepository(url: gradle.mavenDevUrl) {
                    authentication(userName: gradle.mavenUserName, password: gradle.mavenPwd)
                }
            }
        }


        doFirst {
            def suffix_ver = 'git rev-parse HEAD'.execute().text.substring(0, 7)
            def verName = "1.0" + "_$suffix_ver"
            println("upload $project.name ver $verName")
            repositories.mavenDeployer.pom.version = "$verName"
            repositories.mavenDeployer.pom.artifactId = "$project.name" //"$compileType"
            repositories.mavenDeployer.pom.groupId = "fs-android"
//            repositories.mavenDeployer.pom.packaging = "aar"
        }
        doLast {
            def suffix_ver = 'git rev-parse HEAD'.execute().text.substring(0, 7)
            def verName = "1.0" + "_$suffix_ver"
            println("save $project.name ver $verName")
//            gradle.modifyLibVersion("$compileType", verName)
            gradle.modifyLibVersion( project.name, verName)


        }
    }

    artifacts {
        archives file:file("$buildDir/outputs/aar/cmlweb-release.aar"), name:"$project.name", type: 'aar'
        archives file:file("$buildDir/intermediates/packaged-classes/release/classes.jar")



    }

}

android {
    compileSdkVersion COMPILE_SDK.toInteger()
    buildToolsVersion BUILD_TOOL_VER

    defaultConfig {
        minSdkVersion MIN_SDK
        targetSdkVersion TARGET_SDK
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    if (Boolean.parseBoolean(PUBLISH)) {
        compile "com.didiglobal.chameleon:cmlsdk:$VERSION"
    } else {
        compile project(':cmlsdk')
    }

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$SUPPORT_VER"
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}
